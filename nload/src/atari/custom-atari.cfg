FEATURES {
    STARTADDRESS: default = $4000; # ; so we never clobber DUP 
}
SYMBOLS {
    __STACKSIZE__:       type = weak, value = $0800; # 2k stack
    __STARTADDRESS__:    type = export, value = %S;
    __RESERVED_MEMORY__: type = weak, value = $0001;
}
MEMORY {
    ZP:         file = "", define = yes, start = $0082, size = $007E;
    LSTACK_MEM: file = "", define = no,  start = $0120, size = $00D0;
    LOADER_MEM: file = "", define = no,  start = $03FD, size = $0200;
    MAIN:       file = %O, define = yes, start = %S,    size = $BC20 - __STACKSIZE__ - __RESERVED_MEMORY__ - %S;
}
FILES {
    %O: format = atari;
}
FORMATS {
    atari: # ; initad = INIT: pre_init,
           runad = start;              # ; defined in crt0.s by cc65
}
SEGMENTS {
    ZEROPAGE:  load = ZP,         type = zp;
    STARTUP:   load = MAIN,       type = ro,  define = yes;
    LOWCODE:   load = MAIN,       type = ro,  define = yes, optional = yes;
    ONCE:      load = MAIN,       type = ro,                optional = yes;
    CODE:      load = MAIN,       type = ro,  define = yes;
    LSTACK:    load = MAIN,       type = rw,  define = yes, run = LSTACK_MEM;
    LOADER:    load = MAIN,       type = rw,  define = yes, run = LOADER_MEM;
    DATA:      load = MAIN,       type = rw;
    RODATA:    load = MAIN,       type = ro;
    INIT:      load = MAIN,       type = bss,               optional = yes;
    BSS:       load = MAIN,       type = bss, define = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}

